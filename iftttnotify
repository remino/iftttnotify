#!/bin/sh
# iftttnotify
# Send notification to IFTTT Webhook using Web request

VERSION='1.0.1'

iftttnotify_main() {
	trap _exit INT TERM

	e_args=16
	e_missing_app=17
	e_no_key=18

	_require realpath

	scriptpath="$( realpath "$0" )"
	scriptname="$( basename "$scriptpath" )"

	cmd=
	event="notify"
	key=
	localmail=0

	while getopts e:ghk:mrv opt
	do
		case $opt in
			e|k) event="$OPTARG" ;;
			g) cmd="get_key" ;;
			h) cmd="help" ;;
			m) localmail=1 ;;
			r) event="rich_notify" ;;
			v) cmd="version" ;;
			*) _invalid_opt ;;
		esac
	done

	shift "$(( OPTIND - 1 ))"

	if [ -z "$cmd" ]
	then
		if [ $# -gt 0 ]
		then
			cmd="send"
		else
			cmd="help"
		fi
	fi

	case "$cmd" in
		get_key|help|send|version) "iftttnotify_$cmd" "$@" ;;
		*) _invalid_cmd ;;
	esac

	_exit
}

iftttnotify_help() {
cat <<USAGE
$scriptname $VERSION

USAGE: $scriptname [<options>] <val1> [<val2> [<val3>]]

Send notification via IFTTT Webhooks with up to three values.

The IFTTT Webhooks key must be set in IFTTT_WEBHOOKS_KEY
or saved in ~/.ifttt-webhooks-key:
https://ifttt.com/services/maker_webhooks/settings

OPTIONS:

	-e event  Set IFTTT trigger event. Defaults to "notify".
	-g        Print set IFTTT Webhooks key.
	-h        Show this help screen.
	-m        Send a copy of the notification message to the local mail inbox.
	-r        Set IFTTT trigger event to "rich_notify".
	-v        Show version.

USAGE
}

iftttnotify_get_key() {
	_load_key
	_echo "$key"
}

iftttnotify_send() {
	_load_key

	res=
	now="$( date +'%Y-%m-%dT%H:%M:%S%z' )"
	res="$( _req "$event" "$@" )"

	[ $localmail -ne 0 ] && _mail "$now" "$event" "$@"

	echo "$res"
	echo "$res" | grep '^Congratulations' > /dev/null 2>&1
}

iftttnotify_version() {
	echo "$scriptname $VERSION"
}

_echo() {
	echo "$@"
}

_error() {
	_echo "$@" >&2
}

_escape() {
	echo "$1" | sed 's/\(["\\]\)/\\\1/g'
}

_exit() {
	exit_code=$?
	exit $exit_code
}

_fatal() {
	exit_code="$1"
	shift
	_error "$@"
	exit "$exit_code"
}

_get_key_from_file() {
	for file in \
		$HOME/.ifttt-webhooks-key \
		$HOME/.config/ifttt-webhooks-key \
		/etc/ifttt-webhooks-key
	do
		[ -f "$file" ] || continue
		cat "$file"
		break
	done
}

_invalid_cmd() {
	_error "Invalid command: $cmd"
	_echo
	iftttnotify_help
	exit $e_args
}

_invalid_opt() {
	_error "Invalid option: $opt"
	_echo
	iftttnotify_help
	exit $e_args
}

_load_key() {
	key="$IFTTT_WEBHOOKS_KEY"
	[ -z "$key" ] && key="$( _get_key_from_file )"
	_require_key || return $?
}

_mail() {
cat <<BODY | mail -s "[$scriptname] $2" "$USER"
Time:
$1

Event:
$2

1.
$3

2.
$4

3.
$5

This notification was also sent via IFTTT.
BODY
}

_req() {
	curl -s \
		-X POST \
		-H "Content-Type: application/json" \
		-d "{\"value1\":\"$( _escape "$2" )\",\
			\"value2\":\"$( _escape "$3" )\",\
			\"value3\":\"$( _escape "$4" )\"}" \
		"https://maker.ifttt.com/trigger/$1/with/key/$key"
}

_require() {
	missing_bin=0

	for bin in "$@"
	do
		if ! which "$bin" > /dev/null 2>&1
		then
			missing_bin=1
			_error "Required: $bin"
		fi
	done

	if [ $missing_bin -ne 0 ]
	then
		_fatal $e_missing_app "One or more executables or apps are missing."
	fi
}

_require_key() {
	[ -n "$key" ] && return
	_fatal $e_no_key \
		"Missing key. Please set IFTTT_WEBHOOKS_KEY or save in $HOME/.ifttt-webhooks-key file"
}

iftttnotify_main "$@"
